name: Test

on:
    push:
        branches: [master]
    pull_request:
        branches: [master]

jobs:
    ruff: # https://beta.ruff.rs
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
            - run: pip install --user ruff
            - run: ruff --output-format=github .

    test:
        runs-on: ubuntu-latest
        needs: ruff # Do not run the tests if linting fails.
        strategy:
            fail-fast: false
            matrix: # https://docs.djangoproject.com/en/4.1/faq/install
                django-version: ["4.1"] # ["3.2", "4.0", "4.1"]
                python-version: ["3.11"] # ["3.7", "3.8", "3.9", "3.10"]
                elastic-version: ["7.13.1"] # ["1.7", "2.4", "5.5", "7.13.1"]
                exclude:
                    - django-version: "4.0"
                      python-version: "3.7"
                    - django-version: "4.1"
                      python-version: "3.7"
                include:
                    - django-version: "4.1"
                      python-version: "3.11"
                      elastic-version: "7.13.1"
        services:
            elastic:
                image: elasticsearch:${{ matrix.elastic-version }}
                env:
                    discovery.type: "single-node"
                options: >-
                    --health-cmd "curl http://localhost:9200/_cluster/health"
                    --health-interval 10s
                    --health-timeout 5s
                    --health-retries 10
                ports:
                    - 9200:9200
            solr:
                image: solr:6
                ports:
                    - 8983:8983
                volumes:
                    - /home/runner/work/django-haystack/django-haystack/test_haystack/solr_tests/server/confdir/conf:/opt/solr/server/solr/mycores/collection1/conf
        steps:
            - name: Display running Docker containers
              run: docker ps
            - name: Verify Docker permissions
              # TODO: use the Solr CLI inside the container to create the core
              run: docker ps -f ancestor=solr:6 --format '{{.ID}}' | xargs -L1 -I% docker exec % id
            - name: Configure Solr core
              run: curl -fs --retry 30 --retry-all-errors --retry-delay 2 http://localhost:8983/solr/admin/cores?action=CREATE&name=collection1&instanceDir=/opt/solr/server/solr/mycores/collection1&config=conf/solrconfig.xml&schema=conf/schema.xml
            - name: Reset permissions so checkout will succeed
              run: sudo chown -R $USER:$USER $GITHUB_WORKSPACE
            - uses: actions/checkout@v3
            - name: Set up Python ${{ matrix.python-version }}
              uses: actions/setup-python@v4
              with:
                  python-version: ${{ matrix.python-version }}
            - name: Install system dependencies
              run: sudo apt install --no-install-recommends -y gdal-bin
            - name: Install dependencies
              run: |
                  python -m pip install --upgrade pip setuptools wheel
                  pip install coverage requests tox tox-gh-actions
                  pip install django==${{ matrix.django-version }} elasticsearch==${{ matrix.elastic-version }}
                  python setup.py clean build install
            - name: Run test
              run: tox -v
              env:
                  DJANGO: ${{ matrix.django-version }}
                  SOLR_HOST: "127.0.0.1"
                  SOLR_PORT: "8983"
                  TEST_ELASTICSEARCH_1_URL: "http://127.0.0.1:9200/"
                  TEST_SOLR_URL: "http://127.0.0.1:8983/solr/collection1"
                  TEST_SOLR_ADMIN_URL: "http://127.0.0.1:8983/solr/admin/cores"
